\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{java.io.OutputStream}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.IOException}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.InputStream}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.PrintWriter}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.math.BigDecimal}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.math.BigInteger}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.StringTokenizer}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.BufferedReader}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.InputStreamReader}\PYG{o}{;}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * Built using CHelper plug\PYGZhy{}in}
\PYG{c+cm}{ * Actual solution is at the top}
\PYG{c+cm}{ */}
\PYG{k+kd}{public} \PYG{k+kd}{class} \PYG{n+nc}{Main} \PYG{o}{\PYGZob{}}

    \PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kt}{void} \PYG{n+nf}{main}\PYG{o}{(}\PYG{n}{String}\PYG{o}{[]} \PYG{n}{args}\PYG{o}{)} \PYG{o}{\PYGZob{}}
        \PYG{n}{InputStream} \PYG{n}{inputStream} \PYG{o}{=} \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{in}\PYG{o}{;}
        \PYG{n}{OutputStream} \PYG{n}{outputStream} \PYG{o}{=} \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{;}
        \PYG{n}{InputReader} \PYG{n}{in} \PYG{o}{=} \PYG{k}{new} \PYG{n}{InputReader}\PYG{o}{(}\PYG{n}{inputStream}\PYG{o}{);}
        \PYG{n}{PrintWriter} \PYG{n}{out} \PYG{o}{=} \PYG{k}{new} \PYG{n}{PrintWriter}\PYG{o}{(}\PYG{n}{outputStream}\PYG{o}{);}
        \PYG{n}{Task} \PYG{n}{solver} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Task}\PYG{o}{();}
        \PYG{n}{solver}\PYG{o}{.}\PYG{n+na}{solve}\PYG{o}{(}\PYG{l+m+mi}{1}\PYG{o}{,} \PYG{n}{in}\PYG{o}{,} \PYG{n}{out}\PYG{o}{);}
        \PYG{n}{out}\PYG{o}{.}\PYG{n+na}{close}\PYG{o}{();}
    \PYG{o}{\PYGZcb{}}

    \PYG{k+kd}{static} \PYG{k+kd}{class} \PYG{n+nc}{Task} \PYG{o}{\PYGZob{}}
        \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{k+kt}{long} \PYG{n}{MOD} \PYG{o}{=} \PYG{o}{(}\PYG{k+kt}{long}\PYG{o}{)} \PYG{o}{(}\PYG{l+m+mf}{1e9} \PYG{o}{+} \PYG{l+m+mi}{7}\PYG{o}{);}

        \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{solve}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{testNumber}\PYG{o}{,} \PYG{n}{InputReader} \PYG{n}{in}\PYG{o}{,} \PYG{n}{PrintWriter} \PYG{n}{out}\PYG{o}{)} \PYG{o}{\PYGZob{}}
            \PYG{c+cm}{/**}
\PYG{c+cm}{             * write your main code here}
\PYG{c+cm}{             */}
        \PYG{o}{\PYGZcb{}}

    \PYG{k+kd}{static} \PYG{k+kd}{class} \PYG{n+nc}{InputReader} \PYG{o}{\PYGZob{}}
        \PYG{k+kd}{public} \PYG{n}{BufferedReader} \PYG{n}{reader}\PYG{o}{;}
        \PYG{k+kd}{public} \PYG{n}{StringTokenizer} \PYG{n}{tokenizer}\PYG{o}{;}

        \PYG{k+kd}{public} \PYG{n+nf}{InputReader}\PYG{o}{(}\PYG{n}{InputStream} \PYG{n}{stream}\PYG{o}{)} \PYG{o}{\PYGZob{}}
            \PYG{n}{reader} \PYG{o}{=} \PYG{k}{new} \PYG{n}{BufferedReader}\PYG{o}{(}\PYG{k}{new} \PYG{n}{InputStreamReader}\PYG{o}{(}\PYG{n}{stream}\PYG{o}{),} \PYG{l+m+mi}{32768}\PYG{o}{);}
            \PYG{n}{tokenizer} \PYG{o}{=} \PYG{k+kc}{null}\PYG{o}{;}
        \PYG{o}{\PYGZcb{}}

        \PYG{k+kd}{public} \PYG{n}{String} \PYG{n+nf}{next}\PYG{o}{()} \PYG{o}{\PYGZob{}}
            \PYG{k}{while} \PYG{o}{(}\PYG{n}{tokenizer} \PYG{o}{==} \PYG{k+kc}{null} \PYG{o}{||} \PYG{o}{!}\PYG{n}{tokenizer}\PYG{o}{.}\PYG{n+na}{hasMoreTokens}\PYG{o}{())} \PYG{o}{\PYGZob{}}
                \PYG{k}{try} \PYG{o}{\PYGZob{}}
                    \PYG{n}{tokenizer} \PYG{o}{=} \PYG{k}{new} \PYG{n}{StringTokenizer}\PYG{o}{(}\PYG{n}{reader}\PYG{o}{.}\PYG{n+na}{readLine}\PYG{o}{());}
                \PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{IOException} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}
                    \PYG{k}{throw} \PYG{k}{new} \PYG{n}{RuntimeException}\PYG{o}{(}\PYG{n}{e}\PYG{o}{);}
                \PYG{o}{\PYGZcb{}}
            \PYG{o}{\PYGZcb{}}
            \PYG{k}{return} \PYG{n}{tokenizer}\PYG{o}{.}\PYG{n+na}{nextToken}\PYG{o}{();}
        \PYG{o}{\PYGZcb{}}

        \PYG{k+kd}{public} \PYG{k+kt}{int} \PYG{n+nf}{nextInt}\PYG{o}{()} \PYG{o}{\PYGZob{}}
            \PYG{k}{return} \PYG{n}{Integer}\PYG{o}{.}\PYG{n+na}{parseInt}\PYG{o}{(}\PYG{n}{next}\PYG{o}{());}
        \PYG{o}{\PYGZcb{}}

        \PYG{k+kd}{public} \PYG{k+kt}{double} \PYG{n+nf}{nextDouble}\PYG{o}{()}
		\PYG{o}{\PYGZob{}}
			\PYG{k}{return} \PYG{n}{Double}\PYG{o}{.}\PYG{n+na}{parseDouble}\PYG{o}{(}\PYG{n}{next}\PYG{o}{());}
		\PYG{o}{\PYGZcb{}}

		\PYG{k+kd}{public} \PYG{k+kt}{long} \PYG{n+nf}{nextLong}\PYG{o}{()}
		\PYG{o}{\PYGZob{}}
			\PYG{k}{return} \PYG{n}{Long}\PYG{o}{.}\PYG{n+na}{parseLong}\PYG{o}{(}\PYG{n}{next}\PYG{o}{());}
		\PYG{o}{\PYGZcb{}}

        \PYG{k+kd}{public} \PYG{n}{BigInteger} \PYG{n+nf}{nextBigInteger}\PYG{o}{()} \PYG{o}{\PYGZob{}} 
            \PYG{k}{return} \PYG{k}{new} \PYG{n}{BigInteger}\PYG{o}{(}\PYG{n}{next}\PYG{o}{());} 
        \PYG{o}{\PYGZcb{}}

    	\PYG{k+kd}{public} \PYG{n}{BigDecimal} \PYG{n+nf}{nextBigDecimal}\PYG{o}{()} \PYG{o}{\PYGZob{}} 
        	\PYG{k}{return} \PYG{k}{new} \PYG{n}{BigDecimal}\PYG{o}{(}\PYG{n}{next}\PYG{o}{());} 
        \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}

\PYG{o}{\PYGZcb{}}
\end{Verbatim}
